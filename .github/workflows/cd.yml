name: CD

on:
  workflow_dispatch:
  push:
    tags:
      - v*

permissions: {}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
    outputs:
      release_id: ${{ steps.gh-release.outputs.id }}
    steps:
      - name: Checkout release tag
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Set up Python
        uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: '3.x'

      - name: Witness Run
        uses: testifysec/witness-run-action@40aa4ef36fc431a37de7c3faebcb66513c03b934
        with:
          enable-archivista: false
          step: build
          command: |
            python3 -m pip install --upgrade pip build
            python3 -m build --sdist --wheel --outdir dist/ .

      - name: Copy Attestation
        run: |
          ls -la /tmp
          cp /tmp/build-attestation.json dist/

      - name: Store build artifacts
        uses: actions/upload-artifact@694cdabd8bdb0f10b2cea11669e1bf5453eed0a6
        with:
          name: build-artifacts
          path: dist/

  candidate_release:
    name: Release candidate on Github for review
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write # to modify GitHub releases
    outputs:
      release_id: ${{ steps.gh-release.outputs.result }}
    steps:
      - name: Fetch build artifacts
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          name: build-artifacts
          path: dist/

      - id: gh-release
        name: Publish GitHub release draft
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            fs = require('fs')
            res = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: '${{ github.ref_name }}-rc',
              tag_name: '${{ github.ref }}',
              body: 'Release waiting for review...',
            });

            fs.readdirSync('dist/').forEach(file => {
              github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: res.data.id,
                name: file,
                data: fs.readFileSync('dist/' + file),
              });
            });
            return res.data.id
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: candidate_release
    environment: release
    permissions:
      contents: write # to modify GitHub releases
    steps:
      - name: Fetch build artifacts
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935
        with:
          name: build-artifacts
          path: dist/

      - name: Set artifacts information
        run: |
           echo "WHL_NAME=$(ls dist/*.whl | awk -F '/' '{ print $NF }')" >> $GITHUB_ENV
           echo "TAR_NAME=$(ls dist/*.tar.gz | awk -F '/' '{ print $NF }')" >> $GITHUB_ENV
           echo "ATT_NAME=$(ls dist/*.json | awk -F '/' '{ print $NF }')" >> $GITHUB_ENV
           echo "WHL_SHASUM=$(shasum -a 256 dist/*.whl | awk '{ print $1 }')" >> $GITHUB_ENV
           echo "TAR_SHASUM=$(shasum -a 256 dist/*tar.gz | awk '{ print $1 }')" >> $GITHUB_ENV
           echo "ATT_SHASUM=$(shasum -a 256 dist/*.json | awk '{ print $1 }')" >> $GITHUB_ENV
           echo "WHL_LENGTH=$(du -b dist/*.whl | awk '{ print $1 }')" >> $GITHUB_ENV
           echo "TAR_LENGTH=$(du -b dist/*.tar.gz | awk '{ print $1 }')" >> $GITHUB_ENV
           echo "ATT_LENGTH=$(du -b dist/*.json | awk '{ print $1 }')" >> $GITHUB_ENV

      - name: Add to TUF Metadata Repository (RSTUF)
        id: rstuf
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.rstuf.kairo.dev/api/v1/artifacts/'
          method: 'POST'
          escapeData: 'true'
          customHeaders: '{"apikey": "${{ secrets.RSTUF_TARGETS_TOKEN }}"}'
          data: >-
            {
              "targets": [
                {
                  "info": {
                    "length": ${{ env.WHL_LENGTH }},
                    "hashes": {"sha256": "${{ env.WHL_SHASUM }}"}
                  },
                  "path": "${{ github.ref_name }}/${{ env.WHL_NAME }}"
                },
                {
                  "info": {
                    "length": ${{ env.TAR_LENGTH }},
                    "hashes": {"sha256": "${{ env.TAR_SHASUM }}"}
                },
                  "path": "${{ github.ref_name }}/${{ env.TAR_NAME }}"
                },
                {
                  "info": {
                    "length": ${{ env.ATT_LENGTH }},
                    "hashes": {"sha256": "${{ env.ATT_SHASUM }}"}
                },
                  "path": "${{ github.ref_name }}/${{ env.ATT_NAME }}"
                }
              ]
            }

      - name: Log Response
        run: |
          echo ${{ steps.rstuf.outputs.response }}

      - name: Finalize GitHub release
        uses: actions/github-script@c713e510dbd7d213d92d41b7a7805a986f4c5c66
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: '${{ needs.candidate_release.outputs.release_id }}',
              name: '${{ github.ref_name }}',
            })
